version: '3.9'

services:
  postgres:
    build: ./backend/BBDD
    container_name: BBDD-postgres-app
    restart: unless-stopped
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/BBDD/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d myapp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./access-front
      dockerfile: Dockerfile
    container_name: frontend-react
    ports:
      - "5173:5173"
    volumes:
      - ./access-front:/app
      - /app/node_modules
    command: npm run dev -- --host
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge